/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package apotek.ui.datakonsumen;

import apotek.models.Konsumen;
import apotek.application.repositories.services.PasswordGenerator;
import apotek.ui.MainFrame;
import apotek.ui.dashboard.ApotekViewAdmin;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Dukhaan
 */
public class DataKonsumenView extends javax.swing.JPanel {

    /**
     * Creates new form DataKonsumenView
     */
    private MainFrame mainFrame;
    public DefaultTableModel model;
    private List<Konsumen> daftarKonsumen;

    public DataKonsumenView(MainFrame mainFrame) {
        this.mainFrame = mainFrame;
        initComponents();
        daftarKonsumen = Konsumen.getDaftarObat();
        initTable();
    }

    private void initTable() {
        model = (DefaultTableModel) tableKonsumen.getModel();
        model.setRowCount(0);

        for (Konsumen konsumen : Konsumen.getDaftarObat()) {
            model.addRow(new Object[]{
                konsumen.getId(),
                konsumen.getNama(),
                konsumen.getUsername(),
                konsumen.getPassword(),});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        inputId = new javax.swing.JTextField();
        inputNama = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKonsumen = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        inputUsername = new javax.swing.JTextField();

        jPanel2.setBackground(new java.awt.Color(31, 29, 43));

        jLabel2.setBackground(new java.awt.Color(241, 240, 242));
        jLabel2.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(241, 240, 242));
        jLabel2.setText("Data Konsumen");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(306, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(293, 293, 293))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        inputId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputIdActionPerformed(evt);
            }
        });

        inputNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNamaActionPerformed(evt);
            }
        });

        tableKonsumen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Konsumen", "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableKonsumen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableKonsumenMouseClicked(evt);
            }
        });
        // Mengatur seluruh kolom tabel agar rata tengah
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

        for (int i = 0; i < tableKonsumen.getColumnCount(); i++) {
            tableKonsumen.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
        jScrollPane1.setViewportView(tableKonsumen);

        jLabel3.setText("ID");

        jLabel7.setText("Nama Konsumen :");

        btnExit.setText("Kembali");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        btnDelete.setText("Hapus");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106)
                .addComponent(btnSimpan)
                .addGap(18, 18, 18)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addGap(96, 96, 96)
                .addComponent(btnExit)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSimpan)
                            .addComponent(btnEdit)
                            .addComponent(btnExit)
                            .addComponent(btnDelete))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setText("Username : ");

        inputUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputUsernameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(inputId)
                                    .addComponent(inputNama)
                                    .addComponent(inputUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel7))
                            .addComponent(jLabel3))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inputId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(inputUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int selectedRow = tableKonsumen.getSelectedRow();
        if (selectedRow >= 0) {
            // getInput
            String kodeId = inputId.getText();
            String nama = inputNama.getText();
            String username = inputUsername.getText();
            String password = PasswordGenerator.generateRandomPassword(); // Menggunakan PasswordGenerator

            if (kodeId.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Kode Id harus diisi.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (nama.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nama harus diisi.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (username.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Username harus diisi.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                // getTable
                DefaultTableModel model = (DefaultTableModel) tableKonsumen.getModel();

                // Update data dalam tabel
                model.setValueAt(kodeId, selectedRow, 0);
                model.setValueAt(nama, selectedRow, 1);
                model.setValueAt(username, selectedRow, 2);
                //model.setValueAt(password, selectedRow, 3);

                // Perbarui data dalam daftarKonsumen
                List<Konsumen> daftarKonsumen = Konsumen.getDaftarObat();
                Konsumen konsumenToUpdate = daftarKonsumen.get(selectedRow);
                konsumenToUpdate.setId(kodeId);
                konsumenToUpdate.setNama(nama);
                konsumenToUpdate.setUsername(username);
                //konsumenToUpdate.setPassword(password);

                // Membersihkan input setelah mengedit
                inputId.setText("");
                inputNama.setText("");
                inputUsername.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang akan diedit.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        mainFrame.showView(mainFrame.getViewAdmin());
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
// getText
        String kodeId = inputId.getText();
        String nama = inputNama.getText();
        String username = inputUsername.getText();
        String password = PasswordGenerator.generateRandomPassword();

        // Validation
        if (kodeId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kode Obat tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Stok Obat tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Harga Obat tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama Obat tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (PasswordGenerator.isPasswordUsed(password)) {
            JOptionPane.showMessageDialog(this, "Password sudah digunakan sebelumnya.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Buat objek Obat baru
            Konsumen newKonsumen = new Konsumen();
            newKonsumen.setId(kodeId);
            newKonsumen.setNama(nama);
            newKonsumen.setUsername(username);
            newKonsumen.setPassword(password);

            // Add Obat to Table
            DefaultTableModel model = (DefaultTableModel) tableKonsumen.getModel();
            model.addRow(new Object[]{newKonsumen.getId(), newKonsumen.getNama(), newKonsumen.getUsername(), newKonsumen.getPassword()});

            // Simpan data ke obatList
            List<Konsumen> daftarKonsumen = Konsumen.getDaftarObat();
            daftarKonsumen.add(newKonsumen);

            PasswordGenerator.addUsedPassword(password);

            // InputBufferClear
            inputId.setText("");
            inputNama.setText("");
            inputUsername.setText("");
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void inputIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputIdActionPerformed

    }//GEN-LAST:event_inputIdActionPerformed

    private void inputNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNamaActionPerformed

    }//GEN-LAST:event_inputNamaActionPerformed

    private void inputUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputUsernameActionPerformed

    }//GEN-LAST:event_inputUsernameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tableKonsumen.getSelectedRow();
        if (selectedRow >= 0) {
            model = (DefaultTableModel) tableKonsumen.getModel();
            model.removeRow(selectedRow);
            daftarKonsumen.remove(selectedRow);

        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang akan dihapus.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tableKonsumenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableKonsumenMouseClicked
        int selectedRow = tableKonsumen.getSelectedRow();
        int columnIndexId = 0;
        int columnIndexNama = 1;
        int columnIndexUsername = 2;
        int columnIndexPassword = 3;

        // Pastikan ada baris yang dipilih sebelum mencoba mengisi input
        if (selectedRow >= 0) {
            // Mendapatkan model tabel dari tableObat
            DefaultTableModel model = (DefaultTableModel) tableKonsumen.getModel();

            // Mendapatkan nilai dari kolom yang sesuai dari baris yang dipilih
            String kodeId = model.getValueAt(selectedRow, columnIndexId).toString();
            String nama = model.getValueAt(selectedRow, columnIndexNama).toString();
            String username = model.getValueAt(selectedRow, columnIndexUsername).toString();
            String password = model.getValueAt(selectedRow, columnIndexPassword).toString();

            inputId.setText(kodeId);
            inputNama.setText(nama);
            inputUsername.setText(username);
        }
    }//GEN-LAST:event_tableKonsumenMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JTextField inputId;
    private javax.swing.JTextField inputNama;
    private javax.swing.JTextField inputUsername;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableKonsumen;
    // End of variables declaration//GEN-END:variables
}
